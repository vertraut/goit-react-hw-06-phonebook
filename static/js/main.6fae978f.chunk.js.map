{"version":3,"sources":["Component/ContactsList/ContactsList.module.css","Component/Phonebook/Phonebook.module.css","Component/Section/Section.js","redux/contacts/contacts-actions.js","Component/Form/Form.js","redux/contacts/contacts-selectors.js","Component/FilterField/FilterField.js","Component/ContactsList/ContactsList.js","Component/Phonebook/Phonebook.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","reportWebVitals.js","index.js","Component/Form/Form.module.css"],"names":["module","exports","Section","title","children","addContact","createAction","deleteContact","updateFilter","connect","state","items","contacts","dispatch","item","useState","name","setName","phone","setPhone","handleInputChange","currentTarget","value","checkContact","contact","nameNormalized","toLowerCase","dublicateContactByName","find","alert","id","uuidv4","onSubmit","e","preventDefault","trim","className","s","Form","Label","type","onChange","Input","buttonSubmit","getItems","getFilterValue","filter","FilterField","useSelector","useDispatch","target","ContactsList","actions","length","filteredContacts","filtered","includes","filteredList","map","Item","onClick","Button","filteredContactsShow","Phonebook","App","itemsReducer","createReducer","action","payload","filterReducer","_","contactsReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6fae978f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ContactsList_Item__1Uh0S\",\"Button\":\"ContactsList_Button__1o3dW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Phonebook\":\"Phonebook_Phonebook__1dYJo\"};","import React from 'react';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    {title && <h2>{title}</h2>}\r\n    {children}\r\n  </section>\r\n);\r\nexport default Section;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('phonebook/addContact');\r\n\r\nexport const deleteContact = createAction('phonebook/deleteContact');\r\n\r\nexport const updateFilter = createAction('phonebook/updateFilter');\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport s from './Form.module.css';\r\n\r\nfunction Form({ addContact, items }) {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n\r\n  const resetState = () => {\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  const handleInputChange = ({ currentTarget }) => {\r\n    const { name, value } = currentTarget;\r\n    if (name === 'name') {\r\n      setName(value);\r\n      return;\r\n    }\r\n    setPhone(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    checkContact({\r\n      name: name.trim(),\r\n      phone: phone.trim(),\r\n    });\r\n  };\r\n\r\n  const checkContact = contact => {\r\n    const { name, phone } = contact;\r\n    if (name === '' || phone === '') {\r\n      alert('Please fill in the form!');\r\n      return;\r\n    }\r\n    const nameNormalized = name.toLowerCase();\r\n\r\n    const dublicateContactByName = items.find(\r\n      ({ name }) => name.toLowerCase() === nameNormalized,\r\n    );\r\n    if (dublicateContactByName) {\r\n      alert(`${dublicateContactByName.name} is already in contacts.`);\r\n      return;\r\n    }\r\n    contact.id = uuidv4(); //присваеваем ID для нового контакта\r\n    addContact(contact);\r\n    resetState();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.Form}>\r\n      <label className={s.Label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          className={s.Input}\r\n        />\r\n      </label>\r\n      <label className={s.Label}>\r\n        Phone number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          value={phone}\r\n          onChange={handleInputChange}\r\n          className={s.Input}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.buttonSubmit}>\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: item => dispatch(addContact(item)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","export const getItems = state => state.contacts.items;\r\nexport const getFilterValue = state => state.contacts.filter;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { updateFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilterValue } from '../../redux/contacts/contacts-selectors';\r\n\r\nexport default function FilterField() {\r\n  const value = useSelector(getFilterValue);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFilter = e => {\r\n    return dispatch(updateFilter(e.target.value.toLowerCase()));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" value={value} onChange={handleFilter} />\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../redux/contacts/contacts-actions';\r\nimport FilterField from '../FilterField';\r\nimport {\r\n  getItems,\r\n  getFilterValue,\r\n} from '../../redux/contacts/contacts-selectors';\r\nimport s from './ContactsList.module.css';\r\n\r\nfunction ContactsList() {\r\n  const items = useSelector(getItems);\r\n  const filter = useSelector(getFilterValue);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteContact = e => dispatch(actions.deleteContact(e.target.id));\r\n\r\n  const filteredList = () => {\r\n    if (items.length === 0) return; //если нет контактов, выходим\r\n\r\n    const filtered = items.filter(({ name }) => {\r\n      const nameNormalized = name.toLowerCase();\r\n\r\n      return nameNormalized.includes(filter.trim());\r\n    });\r\n\r\n    return filtered.length > 0 ? filtered : false;\r\n  };\r\n\r\n  const filteredContactsShow = filteredContacts => {\r\n    return filteredContacts.map(({ id, name, phone }) => (\r\n      <li key={id} className={s.Item}>\r\n        {name}: {phone}\r\n        <button id={id} onClick={deleteContact} className={s.Button}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ));\r\n  };\r\n  if (items.length <= 0) return <p>Contact list is empty</p>;\r\n  const filteredContacts = filteredList();\r\n  return (\r\n    <div>\r\n      {items.length > 0 && (\r\n        <div>\r\n          <p>Find contact by name</p>\r\n          <FilterField />\r\n        </div>\r\n      )}\r\n\r\n      <ul>\r\n        {filteredContacts ? (\r\n          filteredContactsShow(filteredContacts)\r\n        ) : (\r\n          <p>По вашему запросу ничего не найдено!</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactsList;\r\n","import Section from '../Section';\r\nimport Form from '../Form';\r\nimport ContactsList from '../ContactsList';\r\n\r\nimport s from './Phonebook.module.css';\r\n\r\nfunction Phonebook() {\r\n  return (\r\n    <div className={s.Phonebook}>\r\n      <Section title={'Phonebook'}>\r\n        <Form />\r\n        <Section title={'Contacts'}>\r\n          <ContactsList />\r\n        </Section>\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Phonebook;\r\n","import Phonebook from './Component/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Phonebook />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport * as actions from './contacts-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [actions.addContact]: (state, action) => [...state, action.payload],\r\n  [actions.deleteContact]: (state, action) =>\r\n    state.filter(item => item.id !== action.payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.updateFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport store from './redux/store';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__1OgL-\",\"buttonSubmit\":\"Form_buttonSubmit__2gD2M\",\"Label\":\"Form_Label__8Twkx\",\"Input\":\"Form_Input__nWvkE\"};"],"sourceRoot":""}